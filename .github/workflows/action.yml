name: selenium_test
on: [push, pull_request]

permissions:
  checks: write
  pull-requests: write
  contents: read

jobs:
  selenium_test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Check code for errors by flake8 and format code with black
        uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: ""
          use-pylint: false
          use-pycodestyle: false
          use-flake8: true
          use-black: true
          use-mypy: false
          use-isort: false
          extra-pylint-options: ""
          extra-pycodestyle-options: ""
          extra-flake8-options: "--count --benchmark --ignore=E501,F401,W503,F631"
          extra-black-options: ". -S --line-length 79"
          extra-mypy-options: ""
          extra-isort-options: ""
      - name: Update repo
        run: sudo apt-get update
      #----------------------------------------------
      #  -----  install browsers  -----
      #----------------------------------------------
      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
      - name: Install Firefox
        uses: riccione/setup_firefox@v1
      - name: Check Chromium version
        run: chromium-browser --version

      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
      - name: Install project
        run: poetry install --no-interaction
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest tests/ --junitxml report.xml --headless
      - name: Create test summary
        uses: test-summary/action@v2.0
        with:
          paths: report.xml
        if: always()
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: "report.xml"
      #----------------------------------------------
      #              save report for download
      #----------------------------------------------
      - name: Upload report using artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: report
          path: /home/runner/work/saucedemo_yu/saucedemo_yu/report/